/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  ExerciseTemplate as PrismaExerciseTemplate,
  Exercise as PrismaExercise,
} from "@prisma/client";

export class ExerciseTemplateServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ExerciseTemplateCountArgs, "select">
  ): Promise<number> {
    return this.prisma.exerciseTemplate.count(args);
  }

  async exerciseTemplates(
    args: Prisma.ExerciseTemplateFindManyArgs
  ): Promise<PrismaExerciseTemplate[]> {
    return this.prisma.exerciseTemplate.findMany(args);
  }
  async exerciseTemplate(
    args: Prisma.ExerciseTemplateFindUniqueArgs
  ): Promise<PrismaExerciseTemplate | null> {
    return this.prisma.exerciseTemplate.findUnique(args);
  }
  async createExerciseTemplate(
    args: Prisma.ExerciseTemplateCreateArgs
  ): Promise<PrismaExerciseTemplate> {
    return this.prisma.exerciseTemplate.create(args);
  }
  async updateExerciseTemplate(
    args: Prisma.ExerciseTemplateUpdateArgs
  ): Promise<PrismaExerciseTemplate> {
    return this.prisma.exerciseTemplate.update(args);
  }
  async deleteExerciseTemplate(
    args: Prisma.ExerciseTemplateDeleteArgs
  ): Promise<PrismaExerciseTemplate> {
    return this.prisma.exerciseTemplate.delete(args);
  }

  async getExercises(parentId: string): Promise<PrismaExercise | null> {
    return this.prisma.exerciseTemplate
      .findUnique({
        where: { id: parentId },
      })
      .exercises();
  }
}
