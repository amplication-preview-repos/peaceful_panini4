/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsDate,
  ValidateNested,
  IsOptional,
  IsNumber,
  Max,
  IsInt,
  Min,
} from "class-validator";
import { Type } from "class-transformer";
import { Training } from "../../training/base/Training";
import { User } from "../../user/base/User";
import { Decimal } from "decimal.js";
import { ExerciseTemplate } from "../../exerciseTemplate/base/ExerciseTemplate";

@ObjectType()
class Exercise {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: () => Training,
  })
  @ValidateNested()
  @Type(() => Training)
  @IsOptional()
  training?: Training | null;

  @ApiProperty({
    required: false,
    type: () => User,
  })
  @ValidateNested()
  @Type(() => User)
  @IsOptional()
  user?: User | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  resultWeight!: Decimal | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(1)
  @Max(200)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  reps!: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(1)
  @Max(100)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  sets!: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  weight!: Decimal | null;

  @ApiProperty({
    required: false,
    type: () => ExerciseTemplate,
  })
  @ValidateNested()
  @Type(() => ExerciseTemplate)
  @IsOptional()
  tempateId?: ExerciseTemplate | null;
}

export { Exercise as Exercise };
