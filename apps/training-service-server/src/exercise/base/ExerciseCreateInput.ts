/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { TrainingWhereUniqueInput } from "../../training/base/TrainingWhereUniqueInput";
import {
  ValidateNested,
  IsOptional,
  IsNumber,
  Max,
  IsInt,
  Min,
} from "class-validator";
import { Type } from "class-transformer";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { Decimal } from "decimal.js";
import { ExerciseTemplateWhereUniqueInput } from "../../exerciseTemplate/base/ExerciseTemplateWhereUniqueInput";

@InputType()
class ExerciseCreateInput {
  @ApiProperty({
    required: false,
    type: () => TrainingWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TrainingWhereUniqueInput)
  @IsOptional()
  @Field(() => TrainingWhereUniqueInput, {
    nullable: true,
  })
  training?: TrainingWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  resultWeight?: Decimal | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(1)
  @Max(200)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  reps?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(1)
  @Max(100)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  sets?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  weight?: Decimal | null;

  @ApiProperty({
    required: false,
    type: () => ExerciseTemplateWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ExerciseTemplateWhereUniqueInput)
  @IsOptional()
  @Field(() => ExerciseTemplateWhereUniqueInput, {
    nullable: true,
  })
  tempateId?: ExerciseTemplateWhereUniqueInput | null;
}

export { ExerciseCreateInput as ExerciseCreateInput };
